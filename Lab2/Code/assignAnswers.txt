Assignment 1

1. What line caused the segmentation fault?

    The line that caused the segmentation fault is line 18 since there isn't an "&" in front of the input. The program ended/broke
    at line 26.

2. How do you fix the line so it works properly? 

    For the segmentation fault in line 18, you would need to add the "&" in front of the input.

3. What is the bug here?

    The sum isn't being updated from after getting passed into the read_values function. This means sum remains as 0 and anything
    divided by 0 is 0.

4. How do you fix it? 

    To resolve this issue, you need to make the sum parameter a pointer. Then you place a "&" in front of the sum in the main
    function. This will let you get the updated sum value to fetch the average.


Assignment 2

1. Run the program with the following input: “HELLO!” for str1 and “hello!” for str2. Is the output 
expected?

    Yes the output is the expected output since append adds the new content at the end.

2. Do not stop the program, enter “HI!” for str1 and “hi!” for str2. Is the output expected? What is 
the bug here? Try to fix the program so it will print the output correctly.

    No, the output is not the expected output since HI and hi should be at the end, but it's placed in the beginning.

3. Do not stop the program, enter “Hello! How are you?” for str1 and “I am fine, thank 
you!” for str2. Is the output expected?  Why do you think this happens? You do not need to fix 
this.

    No, since now s1 is missing some letters or missing altogether from the output. We aren't using pointers to point to the end 
    of a string or a null value(to figure out the end of a string).


Assignment 3

